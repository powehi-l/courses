{"config":{"lang":["ja"],"separator":"[\\s\\-\uff0c\u3002]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u65b0\u7684\u5f00\u59cb","text":"<p>\u65b0\u7684\u7f51\u7ad9\uff0c\u53c8\u63a5\u89e6\u4e86\u8fd9\u79cd\u65b0\u7684\u5efa\u7acb\u4e2a\u4eba\u535a\u5ba2\u7684\u5f62\u5f0f\uff0c\u611f\u89c9\u4f1a\u66f4\u5bb9\u6613\u90e8\u7f72\u4e14\u66f4\u52a0\u80fd\u591f\u8ba9\u4eba\u4e13\u6ce8\u4e8e\u6587\u6863\u7684\u4e66\u5199</p>"},{"location":"about/","title":"\u6211\u662f\u8c01","text":"<p>\u4e00\u4e2a\u666e\u666e\u901a\u901a\u7684\u8ba1\u7b97\u673a\u4e13\u4e1a\u7684\u5b66\u751f\uff0c\u6ca1\u6709\u4ec0\u4e48\u4f18\u79c0\u7684\u5730\u65b9\uff0c\u4f46\u662f\u4e5f\u7b97\u4e0d\u4e0a\u592a\u5dee</p>"},{"location":"CMU15-445/Lec1%20Relational%20Model%20and%20Relational%20Algebra/","title":"Lec1 Relational Model and Relational Algebra.md","text":""},{"location":"CMU15-445/Lec1%20Relational%20Model%20and%20Relational%20Algebra/#1-databases","title":"1. Databases","text":"<p>organized huge mount of data that models some aspect of the real-world.  DBMS is the software that trying to manage the databases.</p> <p>\u6570\u636e\u5e93\u5c31\u662f\u4e00\u5927\u5806\u9700\u8981\u7ba1\u7406\u7684\u6570\u636e\uff0c\u4ed6\u4eec\u4ee3\u8868\u4e86\u67d0\u79cd\u771f\u5b9e\u4e16\u754c\u7684\u7279\u5f81\uff0c\u5e76\u4e14\u5177\u6709\u5c5e\u6027\u4e0a\u7684\u76f8\u4f3c\u6027\u3002DBMS\u5c31\u662f\u7528\u6765\u7ba1\u7406\u8fd9\u4e9b\u6709\u5e8f\u7684\u6570\u636e\u7684\u8f6f\u4ef6\u3002</p> <p>!!! note[] </p>"},{"location":"CMU15-445/Lec1%20Relational%20Model%20and%20Relational%20Algebra/#2-flat-file","title":"2. Flat file","text":"<p>comma-seperated value(CSV) files. Each entity will be stored in one file and each line store a real *. Need to parse the file and read data from it.</p> <p>\u5728\u4e00\u4e2a\u6587\u4ef6\u91cc\u9762\u50a8\u5b58\u4e00\u4e2a\u5b9e\u4f53\u7684\u6570\u636e\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u60f3\u8981\u7684\u64cd\u4f5c\uff0c\u5fc5\u987b\u7f16\u5199\u7279\u5b9a\u7684\u7a0b\u5e8f\u8fdb\u884c\u8bfb\u53d6</p> <p>Issue with Flat File</p> <ul> <li> <p>Data integrity(for the same data in different files, how to ensure they are the same,\u6570\u636e\u4e00\u81f4\u6027)</p> </li> <li> <p>Implementation(\u5bfb\u627e\u7279\u5b9a\u8bb0\u5f55\u9700\u8981\u91cd\u65b0\u7f16\u5199\u7a0b\u5e8f)</p> </li> <li> <p>Durability(\u6570\u636e\u5728crash\u65f6\u80fd\u5426\u4fdd\u5b58)</p> </li> </ul>"},{"location":"CMU15-445/Lec1%20Relational%20Model%20and%20Relational%20Algebra/#3-database-management-system","title":"3. Database Management System","text":"<p>A DBMS is a software that allows applications to store and analyze information in a database. </p> <p>A general-purpose DBMS allow the definision, creation, querying, update and administration of database in accordance with some data model.</p> <ul> <li> <p>data model: a collection of concepts for describling the data in the database.</p> </li> <li> <p>schema: description of a particular collection of data based on a data model.</p> </li> </ul>"},{"location":"CMU15-445/Lec1%20Relational%20Model%20and%20Relational%20Algebra/#4-relational-model","title":"4. Relational Model","text":"<p>The ralational model defines a database abstraction based on relations to avoid maintenance overhead</p> <p>key tenets:</p> <ul> <li> <p>store databases in simple data structure</p> </li> <li> <p>physical storage left up to the DBMS implementation</p> </li> <li> <p>access data through high-level language</p> </li> </ul> <p>A relation is an unordered set that contain the relationship of attributes that represent entities</p> <p>A tuple is a set of attribute values in the relation</p> <ul> <li> <p>values are(normally) atomic/scalar(\u539f\u5b50\u6027\u7684\uff0c\u6bcf\u4e00\u4e2aattribute\u4e0d\u80fd\u62c6\u5206\u6210\u66f4\u5c0f\u7684\u6570\u636e\u5355\u5143)</p> </li> <li> <p>The special value NULL is a member of every domain</p> </li> </ul> <p>Key: A relation's primary key uniquely identifies a single tuple. </p> <p>Foreign key: an attribute from one relation has to map to a  tuple in another relation</p>"},{"location":"CMU15-445/Lec1%20Relational%20Model%20and%20Relational%20Algebra/#5-data-manipulation-language","title":"5. Data Manipulation Language","text":"<ul> <li> <p>Procedural: \u8bf4\u660e\u5bfb\u627e\u6570\u636e\u7684\u7b97\u6cd5\u662f\u4ec0\u4e48</p> </li> <li> <p>Non-Procedural: \u8bf4\u660e\u8981\u627e\u7684\u6570\u636e\u7684\u5c5e\u6027\uff0c\u5176\u4ed6\u7684\u4ea4\u7ed9DBMS</p> </li> </ul>"},{"location":"CMU15-445/Lec1%20Relational%20Model%20and%20Relational%20Algebra/#6-relation-algebra","title":"6. Relation ALgebra","text":""},{"location":"CMU15-445/Lec1%20Relational%20Model%20and%20Relational%20Algebra/#61-select","title":"6.1 select","text":"<p>Choose a subset of tuples from a relation that satisfies a selection predicate. \u6839\u636e\u6761\u4ef6\u7b5b\u9009\u6ee1\u8db3\u6761\u4ef6\u7684tuple</p> <p>\\(\\sigma_{predicate}(R)\\) </p>"},{"location":"CMU15-445/Lec1%20Relational%20Model%20and%20Relational%20Algebra/#62-projection","title":"6.2 Projection","text":"<p>Generate a relation with tuples that contains only the specified attibutes. \u53ea\u4fdd\u7559\u5f53\u524dtuples\u7684\u90e8\u5206\u5c5e\u6027</p> <p>\\(\\pi_{A1,A2,...,An}(R)\\)</p>"},{"location":"CMU15-445/Lec1%20Relational%20Model%20and%20Relational%20Algebra/#63-union","title":"6.3 Union","text":"<p>Generate a relation that contains all tuple that appear in either one or both input relations</p>"},{"location":"Theory%20of%20Computation/Lec1%20intro%20to%20the%20theory%20of%20computation/","title":"finite automata","text":"<p>input, output, process</p> <p>definition:  a finite autometon is a 5-tuples:   1. Q finite set of state   2. \\(\\sum\\) finite set of alphabet symbols   3. \\(\\delta\\) transition function(\\(\\delta: Q \\times \\sum \\rightarrow Q\\))   4. \\(q_0\\) start state   5. \\(F\\) set of accept states</p> <p>a language is regular if some autometon recognize it</p>"},{"location":"Theory%20of%20Computation/Lec1%20intro%20to%20the%20theory%20of%20computation/#string-and-language","title":"string and language","text":"<ul> <li>a string is is a finite sequence of symbols in \\(\\sum\\)</li> <li>a language is a set of strings</li> <li>the empty string is a string with length 0</li> <li>the empty language \\(\\emptyset\\) is the set with no string</li> </ul>"},{"location":"Theory%20of%20Computation/Lec1%20intro%20to%20the%20theory%20of%20computation/#recognization-and-accept","title":"recognization and accept","text":"<ul> <li>M accept string \\(m = m_0m_1...m_n\\) if<ol> <li>\\(r_0 = q_0\\)</li> <li>\\(r_i = \\delta(r_{i-1}, m_i)\\)</li> <li>\\(r_n \\in F\\)</li> </ol> </li> <li>recognizing languages<ul> <li>\\(L(M) = \\{w|M\\ accept\\ w\\}\\)</li> <li>\\(L(M)\\) is the language of M</li> <li>M recognize \\(L(M)\\)</li> </ul> </li> <li>a language is regular is some finite aotumeton recognizes it</li> </ul>"},{"location":"Theory%20of%20Computation/Lec1%20intro%20to%20the%20theory%20of%20computation/#closure-operation-and-regular-expression","title":"closure operation and regular expression","text":"<p>closure operations: \\(\\bigcup, \\circ, A^*\\)</p> <p>regular expression: language constructed by using closure operation and atomic elements.</p>"},{"location":"Theory%20of%20Computation/Lec1%20intro%20to%20the%20theory%20of%20computation/#closure-properties","title":"closure properties","text":"<ul> <li>operation: \\(\\bigcup\\),  \\(\\circ\\), \\(A^*\\)</li> <li>regular expression: build from \\(\\sum\\)(like symbols, \\(\\emptyset, e\\)) by \\(\\bigcup, \\circ, A^*\\)</li> <li>prove that finite aotumeta is equivalent to regular expression, closure of regular language<ul> <li>if \\(A_1, A_2\\) is regular languages, so is \\(A_1 \\bigcup A_2\\) </li> <li>let \\(M_1\\) corresponding to \\(A_1\\) , \\(M_2\\) correspond to \\(A_2\\)</li> <li>need to construct a \\(M\\) from \\(M_1, M_2\\) correspond to \\(A_1 \\bigcup A_2\\)</li> </ul> </li> </ul>"},{"location":"Theory%20of%20Computation/Lec1%20intro%20to%20the%20theory%20of%20computation/#summary","title":"summary","text":"<ul> <li>finite autometa, formal definision, regular language</li> <li>regular operation and regular expression</li> <li>prove: class of regular language is closed under operations</li> </ul>"},{"location":"Theory%20of%20Computation/Lec2%20closure%20and%20NFA/","title":"Lec2 closure and NFA","text":"<ul> <li>Nodeterminism</li> <li>closure under \\(\\circ\\) and \\(\\ast\\)</li> <li>regular expression -&gt; finite automata</li> </ul>"},{"location":"Theory%20of%20Computation/Lec2%20closure%20and%20NFA/#nondetermine-finite-autometa","title":"Nondetermine finite autometa","text":"<p>new features of nondeterminism</p> <ul> <li>multiple paths possible(0, 1 or many at each step)</li> <li>\\(\\varepsilon -transaction\\) is a free move without reading input</li> <li>accept input is some path leads to </li> <li>[[Lec1 intro to the theory of computation#finite automata|DFA]]</li> </ul> <p>formal definition: a 5-tuple(all same as before)</p> <ol> <li>Q finite set of state</li> <li>\\(\\sum\\) finite set of alphabet symbols</li> <li>\\(\\delta\\) transition function(\\(\\delta: Q \\times \\sum_{\\varepsilon} \\rightarrow P(Q)\\))</li> <li>\\(\\sum_{\\varepsilon} = \\sum + \\{\\varepsilon\\}\\)</li> <li>\\(P(Q) = \\{R|R \\subseteq Q\\}\\)</li> <li>\\(q_0\\) start state</li> <li>\\(F\\) set of accept states</li> </ol> <p>way to think about nondeterminism - coputational: fork new parallel thread and accept if any thread leads to an accept state(\u591a\u79cd\u53ef\u80fd\u6027\uff0c\u53e6\u4e00\u6761\u5e76\u884c\u7684\u7ebf\uff0c\u4e3a\u4ec0\u4e48\u6211\u60f3\u5230\u4e86\u591a\u5143\u5b87\u5b99\uff0c\u77ac\u606f\u5168\u5b87\u5b99\uff01) - mathematical: tree with branches . Accept if any branch leads to an accept state(\u4e00\u68f5\u6811\uff0c\u4e5f\u5f88\u6709\u610f\u601d\u7684\u60f3\u6cd5\uff0c\u6bcf\u4e00\u4e2a\u5206\u652f\u90fd\u662f\u6307\u5230\u4e00\u4e2a\u4e0d\u540c\u7684state\uff0c\u5982\u679c\u6700\u540e\u6709\u8282\u70b9\u4e3afinal state\u5219\u6210\u529f) - magical\uff1a guess at each nondeterministic step which way to go. Machine always makes the right </p>"},{"location":"Theory%20of%20Computation/Lec2%20closure%20and%20NFA/#converting-nfas-to-dfas","title":"Converting NFAs to DFAs","text":"<p>Theorem: if an NFA recognizes A then A is regular Proof:   Let NFA M = (\\(Q, \\sum, \\delta, q_0, F\\)) recognize A   construct DFA M' =  (\\(Q^{'}, \\sum^{'}, \\delta^{'}, q_0^{'}, F^{'}\\)) recognize A   construction of \\(M^{'}\\):</p> <ol> <li>\\(Q^{'} = P(Q)\\)</li> <li>\\(\\delta^{'}(R, a) = \\{q|q\\in\\delta(r,a) for\\ some\\ r \\in R\\}\\)</li> <li>\\(q^{'} = \\{q_0\\}\\)</li> <li>\\(F^{'} = \\{R \\in Q^{'} |\\ R\\ intersect\\ F\\}\\)</li> </ol>"},{"location":"Theory%20of%20Computation/Lec2%20closure%20and%20NFA/#closure-properties\u6b63\u5219\u8bed\u8a00\u7684\u95ed\u5305\u6027\u8d28","title":"closure properties(\u6b63\u5219\u8bed\u8a00\u7684\u95ed\u5305\u6027\u8d28)","text":"<ul> <li>If \\(A_1, A_2\\) are regular languages, so is \\(A_1 \\cup A_2\\)</li> <li> </li> <li> <p>If \\(A_1, A_2\\) are regular languages, so is \\(A_1 A_2\\)</p> </li> <li></li> <li> <p>when it get the final state of \\(M_1\\), it can guess right whether go to \\(M_2\\) or not. This solve the problem before</p> </li> <li> <p>If \\(A_1, A_2\\) are regular languages, so is \\(A^*\\)</p> </li> <li></li> <li>empty is string of any language</li> </ul>"},{"location":"Theory%20of%20Computation/Lec2%20closure%20and%20NFA/#regular-expression-rightarrow-nfa\u4ece\u6b63\u5219\u8868\u8fbe\u5f0f\u5230\u6b63\u5219\u8bed\u8a00","title":"regular expression \\(\\rightarrow\\) NFA(\u4ece\u6b63\u5219\u8868\u8fbe\u5f0f\u5230\u6b63\u5219\u8bed\u8a00!!!)","text":"<p>theorem: if R is a regular expression and A = L(R) then A is regular proof: convert R to equivalent NFA M:   1. if R is atomic:       1. R = a for \\(a \\in \\sum\\) \\(\\rightarrow\\)       2. R = \\(\\epsilon\\)        3. R = \\(\\emptyset\\)   2. is R is composite([[Lec2 closure and NFA#closure properties|closure properties]]):       1. \\(R = R_1 \\cup R_2\\)       2. \\(R = R_1 \\circ R_2\\)       3. \\(R = R_1^*\\)</p>"},{"location":"Theory%20of%20Computation/Lec2%20closure%20and%20NFA/#review","title":"review","text":"<ol> <li>nondeterministic finite automata (NFA)</li> <li>NFA and DFA is equivalent in power</li> <li>closure of regular language</li> <li>conversion of regular expression to NFA</li> </ol>"},{"location":"Theory%20of%20Computation/Lec3%20regular%20pumping%20lemma%2C%20FA%20to%20regular%20expression/","title":"last lecture","text":"<ul> <li>nondeterminism</li> <li>NFA to DFA</li> <li>closure under \\(\\circ\\ and\\ *\\)</li> <li>regular expressions \\(\\rightarrow\\) finite automata</li> </ul>"},{"location":"Theory%20of%20Computation/Lec3%20regular%20pumping%20lemma%2C%20FA%20to%20regular%20expression/#today","title":"today","text":"<ul> <li>finite automata \\(\\rightarrow\\) regular expressions</li> <li>proving languages aren't regular</li> <li>context free grammars</li> </ul>"},{"location":"Theory%20of%20Computation/Lec3%20regular%20pumping%20lemma%2C%20FA%20to%20regular%20expression/#dfa-rightarrow-regular-expressions","title":"DFA \\(\\rightarrow\\) regular expressions","text":"<p>recall theorem: if R is a regular expression and A = L(R) then A is regular today theorem: if A is regular then A = A(R) for some regular expr R</p> <ul> <li> <p>GNFA, a Generalized nondeterministic finite automate is similar to an NFA, but alllows regular expressions as transition labels</p> <ul> <li>assume:<ul> <li>one accept state, separate from the start state</li> <li>one arrow from each state to each state(\u52a0\u4e00\u4e2a\u7a7a\u8bed\u8a00\u5c31\u597d)</li> <li>only exiting the start state, only entering the accept state </li> </ul> </li> </ul> </li> <li> <p>lemma: every GNFA G has an equivalent regular expression R</p> <ul> <li> <p>proof: by induction on the number of state k of G</p> </li> <li> <p>basis: k = 2(a two state GNFA)</p> </li> <li> <p>assume k-1 is correct</p> </li> <li> <p>for k states GNFA</p> <ol> <li> <p>pick any state x except the start and accept states</p> </li> <li> <p>remove x</p> </li> <li> <p>repair the damage by recovering all paths that went through x</p> </li> </ol> <p></p> </li> </ul> </li> </ul>"},{"location":"Theory%20of%20Computation/Lec3%20regular%20pumping%20lemma%2C%20FA%20to%20regular%20expression/#non-regular-languages\u5224\u65ad\u4e00\u4e2a\u8bed\u8a00\u662f\u5426\u6b63\u5219","title":"Non-Regular Languages(\u5224\u65ad\u4e00\u4e2a\u8bed\u8a00\u662f\u5426\u6b63\u5219)","text":"<ul> <li>to show a language is regular, we give a DFA</li> <li>need to prove non-regular language, we give a property every regular language has, so that if the language doesn't satisfies that property, then it's not regular.</li> <li>pumping lemma: For every regular language A, there is a number p (the \u201cpumping length\u201d) such that  if\u00a0 s\u2208A\u00a0 and\u00a0 |s|\u2265p\u00a0 then\u00a0 s=xyz\u00a0 where     1)\u00a0 \\(xy^iz\\)\u2208A\u00a0 for all i\u22650\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \\(y^i=yy\u22efy\\)     2)\u00a0 y \u2260 \"\u03b5\"     3)\u00a0 |xy| \u2264 p</li> <li>proof: </li> <li>example<ul> <li>\\(D = \\{0^k1^k | k\\geqslant 0\\}\\)</li> <li>\\(B = \\{w|w\\ has\\ equal\\ numbers\\ of\\ 0s\\ and\\ 1s\\}\\)<ul> <li>\\(B\\cap0^{*}1^{*}\\)</li> </ul> </li> </ul> </li> </ul>"},{"location":"Theory%20of%20Computation/Lec3%20regular%20pumping%20lemma%2C%20FA%20to%20regular%20expression/#context-free-grammars","title":"context free grammars","text":"<ul> <li>rule: variable \\(rightarrow\\) string of variables and terminals</li> <li>variables: symbols appearing on the left-hand side of rules</li> <li>terminals: symbols appearing only on right-hand side</li> <li>start variable: top left symbols</li> </ul> <p>grammars generate strings 1. write down start variables 2. replace any variable according to a rule repeat until terminals remain 3. result is the generated string 4. L(G) is the language of all generated strings</p>"},{"location":"Theory%20of%20Computation/Lec3%20regular%20pumping%20lemma%2C%20FA%20to%20regular%20expression/#quick-review","title":"quick review","text":"<ul> <li>conversion of DFAs to regular expressions</li> <li>proving languages not regular by using the pumping lemma and closure properties</li> <li>context free grammers</li> </ul>"},{"location":"Theory%20of%20Computation/Lec4%20Pushdown%20automata%2C%20CFG%20and%20PDA/","title":"last time","text":"<ul> <li>finite automata \\(\\rightarrow\\) regular expressions</li> <li>proving languages aren't regular</li> <li>context free grammars</li> </ul>"},{"location":"Theory%20of%20Computation/Lec4%20Pushdown%20automata%2C%20CFG%20and%20PDA/#today","title":"today","text":"<ul> <li>context free grammars(CFGs) -- definition</li> <li>context free languages(CFLs)</li> <li>pushdown automata(PDA)</li> <li>Converting CFGs to PDAs</li> </ul>"},{"location":"Theory%20of%20Computation/Lec4%20Pushdown%20automata%2C%20CFG%20and%20PDA/#context-free-grammars-lec3-regular-pumping-lemma-fa-to-regular-expressioncontext-free-grammarscontext-free-grammars","title":"context free grammars [[Lec3 regular pumping lemma, FA to regular expression#context free grammars|context free grammars]]","text":"<ul> <li>rule: variable \\(rightarrow\\) string of variables and terminals</li> <li>variables: symbols appearing on the left-hand side of rules</li> <li>terminals: symbols appearing only on right-hand side</li> <li>start variable: top left symbols</li> </ul> <p>grammars generate strings 1. write down start variables 2. replace any variable according to a rule repeat until terminals remain 3. result is the generated string 4. L(G) is the language of all generated strings</p> <p>formal definition - A context free grammar G is a 4-tuple(\\(V,\\sum, R, S\\))     - V: finite set of variables     - \\(\\sum\\): finite set of terminal symbols     - R: finite set of rules (rules form: \\(V \\rightarrow (V \\cup \\sum )^{*}\\)      - S: start variables - other definitions:     1)\u00a0 u\u21d2v \u00a0if can go from u to v with one substitution step in G     2)\u00a0 u\u21d2v \u00a0if can go from u to v with some number of substitution steps in G     3)  u\u21d2u_1\u21d2u_2\u21d2\u22ef\u21d2u_k=v\u00a0\u00a0\u00a0 is called a derivation of v from u.\u00a0     4) If u=S then it is a derivation of v.     5) \u00a0L(G)={w |\u00a0 w\u2208\\(\u03a3^\u2217\\ and\\ S\u21d2w\\)} - ambiguity     - for the same string, there is two kind of parse tree.     - ![[Pasted image 20221026110935.png]]</p>"},{"location":"Theory%20of%20Computation/Lec4%20Pushdown%20automata%2C%20CFG%20and%20PDA/#pushdown-automatapda","title":"Pushdown Automata(PDA)","text":"<p>PDA = NDA + an infinite stack with push and pop operations [[Lec2 closure and NFA#Nondetermine finite autometa|NFA]]</p> <p>definition: A Pushdown Automaton(PDA) is a 6-tuple(\\(Q, \\sum, \\gamma, \\delta, q_0, F\\)) - \\(\\sum\\): input alphabet - \\(\\gamma\\): stack alphabet - \\(\\delta\\): \\(Q\\times \\sum_{\\epsilon} \\times \\gamma_{\\epsilon} \\rightarrow P(Q \\times \\gamma_{epsilon})\\)</p> <ul> <li>notation of transition: \\(a, b\\rightarrow c\\)(a is next input, b is the symbol on the top of stack and need to be remove, c is the symbol to be pushed into stack. all of them can be \\(\\epsilon\\))</li> </ul>"},{"location":"Theory%20of%20Computation/Lec4%20Pushdown%20automata%2C%20CFG%20and%20PDA/#converting-cfgs-to-pdas","title":"Converting CFGs to PDAs","text":"<ul> <li>Theorem: if A is a CFL then some PDA recognizes A</li> <li>proof: converting A's CFG to a PDA</li> <li></li> </ul>"},{"location":"Theory%20of%20Computation/Lec4%20Pushdown%20automata%2C%20CFG%20and%20PDA/#equivalence-of-cfgs-and-pdas","title":"Equivalence of CFGs and PDAs","text":"<ul> <li>Theorem: A is a CFL iff some PDA recognize A</li> <li>every regular language is also a context text language<ul> <li>a DFA or NFA is a PDA</li> </ul> </li> </ul>"},{"location":"Theory%20of%20Computation/Lec4%20Pushdown%20automata%2C%20CFG%20and%20PDA/#quick-review","title":"quick review","text":"<ol> <li>defined context free grammars and context free languages</li> <li>defined pushdown automata</li> <li>give conversion of CFG to PDAs</li> </ol>"},{"location":"Theory%20of%20Computation/Lec5%20%20The%20CF%20Pumping%20Lemma%2C%20Turing%20Machines/","title":"Last time","text":"<ul> <li>context free grammars(CFGs)</li> <li>context free languages(CFLs)</li> <li>pushdown automata(PDA)</li> <li>Converting CFGs to PDAs</li> </ul>"},{"location":"Theory%20of%20Computation/Lec5%20%20The%20CF%20Pumping%20Lemma%2C%20Turing%20Machines/#today","title":"Today","text":"<ul> <li>proving languages not context free</li> <li>Turing machines</li> <li>T-recognizable and T-decidable languages</li> </ul>"},{"location":"Theory%20of%20Computation/Lec5%20%20The%20CF%20Pumping%20Lemma%2C%20Turing%20Machines/#equivalence-of-cfgs-and-pdas","title":"Equivalence of CFGs and PDAs","text":""},{"location":"Theory%20of%20Computation/Lec5%20%20The%20CF%20Pumping%20Lemma%2C%20Turing%20Machines/#pumping-lemma----proof","title":"pumping lemma -- proof","text":"<p>for every CFL A, there is a p such that if \\(s \\in A\\) and \\(|s| \\ge p\\) then s = uvxyz where   1. \\(uv^ixy^iz \\in A\\) for all \\(i \\ge 0\\)   2. \\(vy \\ne \\varepsilon\\)   3. \\(|vxy| \\le p\\)  ![[Pasted image 20221212090534.png]]</p>"},{"location":"Theory%20of%20Computation/Lec5%20%20The%20CF%20Pumping%20Lemma%2C%20Turing%20Machines/#turing-machinestms","title":"Turing Machines(TMs)","text":"<p>def: A turing machine is a 7-tiple (\\(Q, \\Sigma, \\Gamma, \\delta, q_0, q_{acc}, q_{rej}\\)) \\(\\Sigma :\\) input alphabet \\(\\Gamma:\\) tape alphabet(\\(\\Sigma \\subseteq \\Gamma\\)) \\(\\delta : Q \\times \\Gamma \\rightarrow Q \\times \\Gamma \\times \\{L, R\\}\\) \\(\\delta(q,a) = (r,b,R)\\)</p> <ul> <li> <p>3 possible outcomes for an input</p> <ul> <li>accept w(enter \\(q_{acc}\\))</li> <li>reject w by halting(enter \\(q_{rej}\\))</li> <li>reject w by looping(running forever) <p>def: A is Turing-recognizable if A = L(M) for some TM M def: TM M is a decider if M halts on all inputs</p> </li> </ul> </li> <li> <p>say that M deciders A is a = L(M) and M is a decider</p> <p>def: A is Turing-decidable if A = L(M) for some TM decider M.</p> </li> </ul>"},{"location":"Theory%20of%20Computation/Lec6/","title":"TM variant, church-Turing Thesis","text":"<ul> <li>Last Time<ul> <li>Proving language not context-free</li> <li>Turing Machine</li> <li>Recognizable and decidable</li> <li>recognizable language and decidable language</li> </ul> </li> <li>today<ul> <li>equivalence of variants of the Turing Machine model<ul> <li>multi-tape TMs</li> <li>nodeterministic TMs</li> <li>Enumerators</li> </ul> </li> <li>Church-Turing Thesis</li> <li>Notation for encoding and TMs</li> </ul> </li> </ul>"},{"location":"Theory%20of%20Computation/Lec6/#equivalance-of-variants-of-the-turing-machine-model","title":"equivalance of variants of the Turing Machine model","text":""},{"location":"Theory%20of%20Computation/Lec6/#multi-tape-turing-machines","title":"multi-tape Turing Machines","text":"<p>Theorem: A is T-recognizable iff some multi-tape TM recognizes A</p> <p>proof: \\(\\rightarrow(obvious)\\) \\(\\leftarrow\\)(convert multi-tape to single tape) - every tape get a block - simulate:     1. scan entire tape to find dotted symbols     2. scan again to update according to M's \\(\\delta\\)     3. shift to add room if needed</p>"},{"location":"Theory%20of%20Computation/Lec6/#nodeterministic-turing-machine","title":"nodeterministic Turing machine","text":"<p>theorem: A is T-recognizable iff some NTM recognize A proof: \\(\\rightarrow immediate \\leftarrow convert NTM to deterministic TM\\)</p> <ul> <li>simulate by storing each thread's tape in a seperate block on its tape<ul> <li>need to store head location and state for each thread</li> <li>if a thread fork, then M copies the block</li> <li>if one block accept, then M accept</li> </ul> </li> </ul>"},{"location":"Theory%20of%20Computation/Lec6/#turing-enumerators","title":"Turing Enumerators","text":""},{"location":"Theory%20of%20Computation/Lec6/#notation-for-encoding-objects-into-strings","title":"notation for encoding objects into strings","text":""},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/","title":"1. \u4ec0\u4e48\u662fInternet","text":""},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u4ece\u5177\u4f53\u7ec4\u6210\u89d2\u5ea6","title":"\u4ece\u5177\u4f53\u7ec4\u6210\u89d2\u5ea6","text":"<ul> <li>\u7f51\u7edc\uff1a\u56fe\uff08\u8282\u70b9\uff0c\u8fb9\uff09</li> <li>\u8ba1\u7b97\u673a\u7f51\u7edc\uff1a\u7531\u8ba1\u7b97\u673a\u7ec4\u6210\u8282\u70b9\u7684\u7f51\u7edc\uff08\u8def\u7531\u5668\uff0c\u4ea4\u6362\u673a\uff09<ul> <li>\u8282\u70b9\uff1a \u8def\u7531\u5668\uff0c\u4ea4\u6362\u673a(end system)</li> <li>\u8fb9\uff1a \u63a5\u5165\u7f51\u94fe\u8def\uff0c\u4e3b\u5e72\u94fe\u8def</li> <li>\u534f\u8bae\uff1a \u4e24\u4e2a\u8282\u70b9\u5982\u4f55\u4ea4\u6d41</li> </ul> </li> <li>\u7f51\u7edc\u7684\u7f51\u7edc</li> </ul>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u4ece\u670d\u52a1\u7684\u89d2\u5ea6","title":"\u4ece\u670d\u52a1\u7684\u89d2\u5ea6","text":"<ul> <li>\u901a\u8fc7\u7f51\u7edc\u8fde\u63a5\u8d77\u6765\u7684\u5206\u5e03\u5f0f\u5e94\u7528</li> <li>\u901a\u4fe1\u57fa\u7840\u8bbe\u65bd\u4e3a\u5e94\u7528\u63d0\u4f9b\u7f51\u7edc\u4f20\u8f93\u670d\u52a1</li> </ul>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#2-\u7f51\u7edc\u8fb9\u7f18","title":"2. \u7f51\u7edc\u8fb9\u7f18","text":""},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u7f51\u7edc\u7ed3\u6784","title":"\u7f51\u7edc\u7ed3\u6784","text":"<ul> <li>\u7f51\u7edc\u8fb9\u7f18<ul> <li>\u4e3b\u673a</li> <li>\u5e94\u7528\u7a0b\u5e8f</li> </ul> </li> <li>\u7f51\u7edc\u6838\u5fc3<ul> <li>\u8def\u7531\u5668</li> <li>\u4ea4\u6362\u673a</li> </ul> </li> <li>\u7f51\u7edc\u63a5\u5165<ul> <li>\u8fde\u63a5\u8fb9\u7f18\u4e0e\u6838\u5fc3\u7684\u90e8\u5206</li> </ul> </li> </ul>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u5404\u81ea\u7684\u529f\u80fd","title":"\u5404\u81ea\u7684\u529f\u80fd","text":"<ul> <li>\u7f51\u7edc\u5e94\u7528\uff0c \u6709\u8054\u7f51\u7684\u9700\u6c42</li> <li>\u4e3b\u673a\uff0c\u5404\u79cd\u534f\u8bae\u6808\uff0c\u4e3a\u5e94\u7528\u8054\u7f51\u63d0\u4f9b\u670d\u52a1</li> <li>\u7f51\u7edc\u6838\u5fc3\uff1a\u4f20\u8f93\u6570\u636e\u5230\u76ee\u7684\u5730</li> <li>\u7f51\u7edc\u63a5\u5165: \u5c06\u7f51\u7edc\u8fde\u63a5\u6210\u66f4\u5927\u7684\u7f51\u7edc</li> </ul>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u7f51\u7edc\u8fb9\u7f18","title":"\u7f51\u7edc\u8fb9\u7f18","text":"<ul> <li>\u7aef\u70b9\u7684\u4e3b\u673a</li> <li>\u8fb9\u7f18\u4ea4\u6d41\u7684\u6a21\u5f0f<ul> <li>cs\uff08client-server\u6a21\u5f0f\uff09\uff1a \u670d\u52a1\u5668\u4e3a\u5ba2\u6237\u7aef\u63d0\u4f9b\u670d\u52a1<ul> <li>\u5f53\u5ba2\u6237\u7aef\u589e\u5927\u65f6\uff0c\u6027\u80fd\u4e0b\u964d</li> </ul> </li> <li>p2p\uff08peer-to-peer\u6a21\u5f0f\uff09\uff1a\u5ba2\u6237\u7aef\u4e0e\u5ba2\u6237\u7aef\u63d0\u4f9b\u6570\u636e\uff0c\u4f46\u662f\u4ecd\u7136\u6709\u4e00\u4e2a\u670d\u52a1\u5668\u8fdb\u884c\u8c03j\u5ea6</li> </ul> </li> </ul>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u7f51\u7edc\u5e94\u7528\u91c7\u7528\u7684\u670d\u52a1\u7531\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd\u63d0\u4f9b","title":"\u7f51\u7edc\u5e94\u7528\u91c7\u7528\u7684\u670d\u52a1(\u7531\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd\u63d0\u4f9b)","text":""},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u91c7\u7528\u7f51\u7edc\u8bbe\u65bd\u7684\u9762\u5411\u8fde\u63a5\u7684\u670d\u52a1","title":"\u91c7\u7528\u7f51\u7edc\u8bbe\u65bd\u7684\u9762\u5411\u8fde\u63a5\u7684\u670d\u52a1","text":"<ul> <li>\u8fdb\u7a0b\u5728\u901a\u4fe1\u4e4b\u524d\uff0c\u9700\u8981\u5404\u4e2a\u5c42\u9762\u90fd\u77e5\u9053\u5df2\u7ecf\u5efa\u7acb\u8fde\u63a5</li> <li>tcp</li> </ul>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u91c7\u7528\u57fa\u7840\u8bbe\u65bd\u7684\u65e0\u8fde\u63a5\u670d\u52a1","title":"\u91c7\u7528\u57fa\u7840\u8bbe\u65bd\u7684\u65e0\u8fde\u63a5\u670d\u52a1","text":"<ul> <li>\u76f4\u63a5\u8fdb\u884c\u53d1\u9001\uff0c\u7f51\u7edc\u8fb9\u7f18\u5e76\u4e0d\u77e5\u9053\u5bf9\u65b9\u7684\u72b6\u6001</li> <li>udp</li> </ul>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#3-\u7f51\u7edc\u6838\u5fc3","title":"3. \u7f51\u7edc\u6838\u5fc3","text":"<p>\u7531\u8def\u7531\u5668\u7ec4\u6210\u7684\u7f51\u72b6\u7f51\u7edc</p>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u7f51\u7edc\u7684\u7c7b\u578b","title":"\u7f51\u7edc\u7684\u7c7b\u578b","text":"<ul> <li>\u7535\u8def\u4ea4\u6362\uff1a\u4e13\u6709\u7684\u7ebf\u8def\u8fdb\u884c\u901a\u4fe1\uff0c\u4f8b\u5982\u7535\u8bdd\u7f51</li> <li>\u5206\u7ec4\u4ea4\u6362\uff1a\u5c06\u9700\u8981\u4f20\u8f93\u7684\u6570\u636e\u5206\u6210\u4e00\u4e2a\u4e2a\u5206\u7ec4\uff0c\u7136\u540e\u4ea4\u7531\u8def\u7531\u5668\u8fdb\u884c\u4f20\u8f93</li> </ul>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u7535\u8def\u4ea4\u6362","title":"\u7535\u8def\u4ea4\u6362","text":"<p>\u5728\u4e24\u4e2a\u8def\u7531\u5668\u4e4b\u95f4\u5c06\u7ebf\u8def\u5206\u4e3a\u82e5\u5e72\u6761\u7ebf\uff0c\u72ec\u4eab\u7684\u7ebf\u8def - \u7279\u70b9     - \u4e0d\u5171\u4eab     - \u4fdd\u8bc1\u4e86\u6027\u80fd     - \u8981\u6c42\u5efa\u7acb\u8fde\u63a5 - \u5206\u5272\u7ebf\u8def\u7684\u7c7b\u578b\uff08\u7f51\u7edc\u8d44\u6e90\u88ab\u5206\u4e3a\u201c\u7247\u201d\uff0c \u6bcf\u4e2a\u7247\u8981\u4e48\u7a7a\u95f2\uff0c\u8981\u4e48\u88ab\u72ec\u4eab\uff09     - FDM \u9891\u5206(\u5c06\u9891\u7387\u7684\u4e00\u6bb5\u5206\u4e3a\u5c0f\u6bb5)     - TDM \u65f6\u5206(\u5c06\u4e00\u4e2a\u5468\u671f\u5206\u4e3a\u5c0f\u6bb5)     - \u6ce2\u5206(\u5c06\u5149\u6ce2\u6839\u636e\u6ce2\u957f\u5206\u4e3a\u591a\u4e2a\u6bb5) - \u4f20\u64ad\u5ef6\u8fdf - \u7535\u8def\u4ea4\u6362\u4e0d\u9002\u5408\u8ba1\u7b97\u673a\u4e4b\u95f4\u7684\u901a\u4fe1     - \u5efa\u7acb\u65f6\u95f4\u957f     - \u8ba1\u7b97\u673a\u901a\u4fe1\u7531\u7a81\u53d1\u6027\uff0c\u968f\u65f6\u53ef\u80fd\u53d1\u751f\u6216\u8005\u4e0d\u53d1\u751f\uff0c\u4f1a\u6d6a\u8d39\u201c\u7247\u201d     - \u53ef\u9760\u6027\u4e0d\u9ad8\uff0c\u6bcf\u4e00\u5bf9\u4ea4\u6362\u673a\u4e00\u65e6\u51fa\u73b0\u95ee\u9898\uff0c\u5219\u4f1a\u76f4\u63a5\u5931\u8d25</p>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u5206\u7ec4\u4ea4\u6362","title":"\u5206\u7ec4\u4ea4\u6362","text":"<ul> <li>\u901a\u8fc7\u7f51\u7edc\u6838\u5fc3\u65f6\uff0c\u6bcf\u4e00\u6761\u4f7f\u7528\u5168\u90e8\u5e26\u5bbd</li> <li>\u5b58\u50a8-\u8f6c\u53d1\u6a21\u5f0f\uff0c\u4ee5packet\u4e3a\u5355\u4f4d\uff0c\u5168\u90e8\u5b58\u50a8\u540e\u518d\u8f6c\u53d1\uff08\u533a\u5206\u4e8e\u7535\u8def\u4ea4\u6362\uff0c\u5373\u591a\u4e2a\u901a\u4fe1\u53ef\u5171\u7528\uff09</li> </ul>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u5b58\u50a8-\u8f6c\u53d1","title":"\u5b58\u50a8-\u8f6c\u53d1","text":"<ul> <li>\u5fc5\u987b\u7b49\u5230\u5b8c\u5168\u63a5\u53d7\u4e4b\u540e\u624d\u80fd\u8fdb\u884c\u8f6c\u53d1</li> </ul>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u6392\u961f\u5ef6\u8fdf\u548c\u4e22\u5931","title":"\u6392\u961f\u5ef6\u8fdf\u548c\u4e22\u5931","text":"<ul> <li>\u5982\u679c\u524d\u9762\u8fd8\u6ca1\u4f20\u8f93\u5b8c\uff0c\u5219\u9700\u8981\u7b49\u5f85</li> <li>\u5982\u679c\u4ea4\u6362\u673a\u7f13\u5b58\u5df2\u6ee1\uff0c\u5219\u4f1a\u88ab\u4e22\u5f03</li> </ul>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u7f51\u7edc\u6838\u5fc3\u7684\u5173\u952e\u529f\u80fd","title":"\u7f51\u7edc\u6838\u5fc3\u7684\u5173\u952e\u529f\u80fd","text":"<ul> <li>\u8def\u7531\uff1a\u51b3\u5b9a\u5206\u7ec4\u91c7\u7528\u7684\u6e90\u5230\u76ee\u6807\u7684\u8def\u5f84--\u8def\u7531\u7b97\u6cd5</li> <li>\u8f6c\u53d1\uff1a\u5c06\u5206\u7ec4\u4ece\u8def\u7531\u5668\u7684\u8f93\u5165\u94fe\u8def\u8f6c\u79fb\u5230\u8f93\u51fa\u94fe\u8def</li> </ul>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u7edf\u8ba1\u591a\u8def\u590d\u7528","title":"\u7edf\u8ba1\u591a\u8def\u590d\u7528","text":"<ul> <li>\u6ca1\u6709\u56fa\u5b9a\u7684\u590d\u7528\u65b9\u5f0f</li> </ul>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u5206\u7ec4\u4ea4\u6362-vs-\u7535\u8def\u4ea4\u6362","title":"\u5206\u7ec4\u4ea4\u6362 vs \u7535\u8def\u4ea4\u6362","text":"<p>\u5206\u7ec4\u4ea4\u6362\u5141\u8bb8\u66f4\u591a\u7528\u6237\u540c\u65f6\u4f7f\u7528\u7f51\u7edc - \u9002\u5408\u7a81\u53d1\u6027\u6570\u636e\u4f20\u8f93     - \u8d44\u6e90\u5171\u4eab     - \u65e0\u9700\u547c\u53eb - \u8fc7\u5ea6\u4f7f\u7528\u4f1a\u5bfc\u81f4\u62e5\u585e     - \u76f8\u5e94\u7684\u673a\u5236</p>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u5206\u7ec4\u4ea4\u6362\u7684\u7c7b\u578b","title":"\u5206\u7ec4\u4ea4\u6362\u7684\u7c7b\u578b","text":"<ol> <li>\u6570\u636e\u62a5\u7f51\u7edc<ul> <li>\u5728\u5206\u7ec4\u4ea4\u6362\u673a\u5904\u51b3\u5b9a\u4e0b\u4e00\u8df3\u7684\u76ee\u6807</li> <li>\u95ee\u8def</li> <li>Internet</li> </ul> </li> <li>\u865a\u7535\u8def\u7f51\u7edc<ul> <li>\u6bcf\u4e2a\u5206\u7ec4\u5e26\u6709\u6807\u7b7e\uff0c\u51b3\u5b9a\u4e0b\u4e00\u8df3</li> <li>\u547c\u53eb\u65f6\u51b3\u5b9a\u8def\u5f84\u5e76\u4fdd\u6301\u4e0d\u53d8</li> <li>\u8def\u7531\u5668\u7ef4\u6301\u6bcf\u4e2a\u547c\u53eb\u7684\u72b6\u6001\u4fe1\u606f</li> <li>\u4fe1\u4ee4</li> </ul> </li> </ol>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#4-\u63a5\u5165\u7f51\u548c\u7269\u7406\u5a92\u4f53","title":"4. \u63a5\u5165\u7f51\u548c\u7269\u7406\u5a92\u4f53","text":"<ul> <li>\u7c7b\u578b<ul> <li>\u4f4f\u5b85\u63a5\u5165</li> <li>\u5355\u4f4d\u63a5\u5165</li> <li>\u65e0\u7ebf\u63a5\u5165 \u6ce8\u610f</li> <li>\u63a5\u5165\u7f51\u7edc\u7684\u5e26\u5bbd(bps)</li> <li>\u5171\u4eab/\u4e13\u7528</li> </ul> </li> </ul>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u4f4f\u5b85\u63a5\u5165","title":"\u4f4f\u5b85\u63a5\u5165","text":""},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#modem","title":"modem","text":"<p>\u5c06\u4e0a\u7f51\u6570\u636e\u8c03\u5236\u52a0\u8f7d\u5230\u97f3\u9891\u4fe1\u53f7\u4e0a\uff0c\u5728\u7535\u8bdd\u7ebf\u4e0a\u4f20\u8f93</p>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#dsl","title":"DSL","text":"<p>\u7535\u8bdd\u7ebf\uff0c\u8c03\u5236\u89e3\u8c03</p>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u7ebf\u7f06\u7f51\u7edc","title":"\u7ebf\u7f06\u7f51\u7edc","text":"<p>\u6709\u7ebf\u7535\u89c6\u4fe1\u53f7\uff0c\u4e0a\u4e0b\u884c\u5206\u79bb\uff0c\u5171\u4eab\u4e0a\u884c\u5e26\u5bbd</p>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u7535\u7f06\u6a21\u5f0f","title":"\u7535\u7f06\u6a21\u5f0f","text":""},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u4f01\u4e1a\u63a5\u5165","title":"\u4f01\u4e1a\u63a5\u5165","text":""},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u65e0\u7ebf\u63a5\u5165\u7f51\u7edc","title":"\u65e0\u7ebf\u63a5\u5165\u7f51\u7edc","text":"<ul> <li>\u65e0\u7ebfLAN</li> <li>\u5e7f\u57df\u65e0\u7ebf\u63a5\u5165</li> </ul>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u7269\u7406\u5a92\u4f53","title":"\u7269\u7406\u5a92\u4f53","text":"<ul> <li>\u5bfc\u5f15\u578b\u5a92\u4f53</li> <li>\u975e\u5bfc\u5f15\u578b\u5a92\u4f53</li> <li>\u4ecb\u8d28<ul> <li>\u53cc\u7ede\u7ebf</li> <li>\u540c\u8f74\u7535\u7f06</li> <li>\u5149\u7f06</li> </ul> </li> <li>\u65e0\u7ebf\u94fe\u8def<ul> <li>\u5730\u9762\u5fae\u6ce2</li> <li>LAN\uff08WiFi</li> <li>wide-area</li> <li>\u536b\u661f</li> </ul> </li> </ul>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#5-internet\u7ed3\u6784\u548cisp","title":"5. Internet\u7ed3\u6784\u548cISP","text":"<ul> <li>ISP(internet service provider)<ul> <li>\u591a\u4e2a</li> </ul> </li> <li>ICP(internet content provider) \u5c42\u7ea7\u7ed3\u6784</li> </ul>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#6-\u5206\u7ec4\u5ef6\u65f6\u4e22\u5931\u541e\u5410\u91cf","title":"6. \u5206\u7ec4\u5ef6\u65f6\uff0c\u4e22\u5931\uff0c\u541e\u5410\u91cf","text":""},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u5206\u7ec4\u5ef6\u65f6","title":"\u5206\u7ec4\u5ef6\u65f6","text":"<ol> <li>\u8282\u70b9\u5904\u7406\u5ef6\u65f6\uff1a\u5206\u7ec4\u5230\u8fbe\u4e4b\u540e\u9700\u8981\u8fdb\u884c\u5904\u7406</li> <li>\u6392\u961f\u5ef6\u65f6\uff1a\u9700\u8981\u7b49\u5f85\u5176\u4ed6\u7684\u5206\u7ec4\u5904\u7406\u5b8c\u6210</li> <li>\u4f20\u8f93\u5ef6\u65f6\uff1aL/R \u4ece\u4e3b\u673a\u8f93\u51fabit\u7684\u65f6\u95f4</li> <li> <p>\u4f20\u64ad\u5ef6\u65f6([[Lec1 \u6982\u8bba#\u6392\u961f\u5ef6\u8fdf\u548c\u4e22\u5931|\u5904\u4e8e\u7f51\u7edc\u6838\u5fc3\u4e2d\u7684\u5206\u7ec4\u5ef6\u65f6]]): \u5728\u7ebf\u8def\u4e0a\u4f20\u64ad\u7684\u65f6\u95f4\uff0c\u5982\u679c\u8ddd\u79bb\u8fd1\u5219\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8bb0</p> </li> <li> <p>\u6392\u961f\u5ef6\u65f6</p> <ul> <li>R = \u94fe\u8def\u5e26\u5bbd</li> <li>L = \u5206\u7ec4\u957f\u5ea6</li> <li>a = \u5206\u7ec4\u5230\u8fbe\u961f\u5217\u7684\u5e73\u5747\u901f\u7387</li> <li>\u6d41\u91cf\u5f3a\u5ea6 = \\(La/R\\)<ul> <li>\u5f53\u6d41\u91cf\u5f3a\u5ea6\u8d8b\u8fd1\u4e8e1\u7684\u65f6\u5019\uff0c\u5ef6\u65f6\u8d8b\u8fd1\u4e8e\u65e0\u9650\u5927</li> </ul> </li> </ul> </li> </ol>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u5206\u7ec4\u4e22\u5931","title":"\u5206\u7ec4\u4e22\u5931","text":"<ul> <li>\u7f13\u5b58\u961f\u5217\u6709\u9650</li> <li>\u53ef\u80fd\u4f1a\u88ab\u4e0a\u4e00\u4e2a\u8282\u70b9\u6216\u6e90\u7aef\u7cfb\u7edf\u91cd\u4f20\uff0c\u6216\u8005\u4e0d\u91cd\u4f20</li> </ul>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u541e\u5410\u91cf","title":"\u541e\u5410\u91cf","text":"<p>\u5728\u6e90\u7aef\u4e0e\u76ee\u6807\u7aef\u4e4b\u95f4\u4f20\u8f93\u7684\u901f\u7387 - \u77ac\u95f4\uff0c\u5e73\u5747 - \u77ed\u677f\u6548\u5e94\uff0c \u5728\u4e00\u6761\u94fe\u8def\u4e0a\uff0c\u53d6\u51b3\u4e8e\u541e\u5410\u91cf\u5c0f\u7684 - \u5b9e\u9645\u53d6\u51b3\u4e8e\u6bcf\u4e00\u6761\u94fe\u8def\u9664\u4ee5\u540c\u65f6\u4f7f\u7528\u7684\u6570\u91cf\u7684\u6700\u5c0f\u503c \u5373 \\(min\\{R_i/N_i\\}\\)</p>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#7-\u534f\u8bae\u5c42\u6b21\u53ca\u670d\u52a1\u6a21\u578b","title":"7. \u534f\u8bae\u5c42\u6b21\u53ca\u670d\u52a1\u6a21\u578b","text":""},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u534f\u8bae\u4e0e\u670d\u52a1","title":"\u534f\u8bae\u4e0e\u670d\u52a1","text":""},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u534f\u8bae\u5c42\u6b21","title":"\u534f\u8bae\u5c42\u6b21","text":"<ul> <li>\u5c06\u7f51\u7edc\u7684\u590d\u6742\u529f\u80fd\u5206\u4e3a\u4e0d\u540c\u5c42\u6b21\u7684\u529f\u80fd\uff0c\u6bcf\u4e00\u5c42\u63a5\u53e3\u4e3a\u4e0a\u4e00\u5c42\u63d0\u4f9b\u63a5\u53e3\uff0c\u65e0\u9700\u62c5\u5fc3\u4e0b\u5c42\u7684\u5b9e\u73b0</li> <li>\u4f8b\u5b50\uff0c\u54f2\u5b66\u5bb6\u7684\u4ea4\u6d41\uff0c \u4e09\u5c42\uff08\u54f2\u5b66\u5bb6\uff0c\u7ffb\u8bd1\uff0c\u4f20\u62a5\u4eba\uff09</li> </ul>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u670d\u52a1-\u4e0b\u5c42\u5411\u4e0a\u5c42\u63d0\u4f9b\u7684\u529f\u80fd","title":"\u670d\u52a1\uff1a \u4e0b\u5c42\u5411\u4e0a\u5c42\u63d0\u4f9b\u7684\u529f\u80fd","text":"<ul> <li>\u670d\u52a1\u8bbf\u95ee\u70b9(SAP): \u533a\u5206\u4e0a\u5c42\u7684\u7528\u6237\uff08\u8c03\u7528\u8005\uff09</li> <li>\u901a\u8fc7\u539f\u8bed\u5411\u4e0a\u5c42\u63d0\u4f9b\u670d\u52a1\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3aAPI</li> <li>\u670d\u52a1\u7684\u7c7b\u578b<ul> <li>\u9762\u5411\u8fde\u63a5\u7684\u670d\u52a1\uff08\u9700\u8981\u90fd\u77e5\u9053\u5df2\u7ecf\u5efa\u7acb\u4e86\u8fde\u63a5\uff0c\u4e3a\u540e\u7eed\u94fe\u63a5\u505a\u597d\u51c6\u5907</li> <li>\u65e0\u8fde\u63a5\u7684\u670d\u52a1\uff1a\u4e0d\u9700\u8981\u5efa\u7acb\u8fde\u63a5</li> </ul> </li> </ul>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u670d\u52a1\u4e0e\u534f\u8bae\u7684\u533a\u522b","title":"\u670d\u52a1\u4e0e\u534f\u8bae\u7684\u533a\u522b","text":"<ul> <li>\u670d\u52a1\u662f\u5782\u76f4\u7684\u5173\u7cfb\uff0c\u4e0b\u5c42\u5411\u4e0a\u5c42\u63d0\u4f9b\u670d\u52a1</li> <li>\u534f\u8bae\uff1a\u5bf9\u7b49\u5c42\u5b9e\u4f53\u8fdb\u884c\u4ea4\u6d41</li> </ul>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u670d\u52a1\u4e0e\u534f\u8bae\u7684\u5173\u7cfb","title":"\u670d\u52a1\u4e0e\u534f\u8bae\u7684\u5173\u7cfb","text":"<ul> <li>\u534f\u8bae\u501f\u52a9\u4e0b\u5c42\u670d\u52a1\u5b9e\u73b0</li> <li>\u672c\u5c42\u5b9e\u4f53\u4e3a\u4e0a\u5c42\u63d0\u4f9b\u66f4\u9ad8\u7ea7\u522b\u7684\u670d\u52a1</li> </ul>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u6570\u636e\u5355\u5143","title":"\u6570\u636e\u5355\u5143","text":"<ul> <li>\u672f\u8bed<ul> <li>SAP: service access point</li> <li>IDU: interface data unit</li> <li>SDU: service data unit</li> <li>PDU: protocol data unit</li> <li>ICI: interface control information</li> </ul> </li> <li>\\(SDU_n + ICI_n = PDU_n = SDU_{n+1}\\)</li> </ul>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u5206\u5c42\u5b9e\u73b0\u7684\u597d\u5904","title":"\u5206\u5c42\u5b9e\u73b0\u7684\u597d\u5904","text":"<ul> <li>\u7ed3\u6784\u6e05\u6670</li> <li>\u4fbf\u4e8e\u7ef4\u62a4\u548c\u5347\u7ea7\uff1a\u5206\u522b\u5b9e\u73b0</li> <li>\u574f\u5904\uff1a\u6548\u7387\u964d\u4f4e</li> </ul>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u4e92\u8054\u7f51\u534f\u8bae\u6808","title":"\u4e92\u8054\u7f51\u534f\u8bae\u6808","text":"<ul> <li>\u5e94\u7528\u5c42\uff1a\u7f51\u7edc\u5e94\u7528<ul> <li>FTP, HTTP, DNS, SMTP</li> </ul> </li> <li>\u4f20\u8f93\u5c42\uff1a\u4e3b\u673a\u4e4b\u95f4\u7684\u6570\u636e\u4f20\u8f93<ul> <li>\u8fdb\u7a0b\u5230\u8fdb\u7a0b\u7684\u533a\u5206\uff0c\u5c06\u901a\u4fe1\u7531\u4e0d\u53ef\u5206\u53d8\u4e3a\u53ef\u5206</li> <li>TCP\uff0cUDP</li> </ul> </li> <li>\u7f51\u7edc\u5c42\uff1aend-to-end\u7684\u6570\u636e\u4f20\u8f93<ul> <li>IP</li> </ul> </li> <li>\u94fe\u8def\u5c42\uff1a\u5728\u76f8\u90bb\u4e24\u70b9\u4f20\u8f93\u4ee5\u5e27\u4e3a\u5355\u4f4d\u7684\u6570\u636e<ul> <li>point-to-point: PPP, wifi, ethenet</li> </ul> </li> <li>\u7269\u7406\u5c42\uff1a\u5c06\u7535\u78c1\u6ce2\u4fe1\u53f7\u4e0e01\u6570\u636e\u76f8\u4e92\u8f6c\u5316</li> </ul>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#isoosi-\u53c2\u8003\u6a21\u578b","title":"ISO/OSI \u53c2\u8003\u6a21\u578b","text":"<ul> <li>\u4e03\u5c42\uff1a \u5e94\u7528\u5c42\uff0c\u8868\u793a\u5c42\uff0c\u4f1a\u8bdd\u5c42\uff0c\u4f20\u8f93\u5c42\uff0c\u7f51\u7edc\u5c42\uff0c\u94fe\u8def\u5c42\uff0c\u7269\u7406\u5c42</li> <li>\u5c01\u88c5\u4e0e\u89e3\u5c01\u88c5<ul> <li>\u4ea4\u6362\u673a\uff1a\u94fe\u8def\u5c42\uff0c\u67e5\u770b\u7f51\u5361\u7269\u7406\u5730\u5740\uff0c\u9009\u62e9\u7531\u54ea\u4e2a\u7aef\u53e3\u6536\u53d1</li> <li>\u8def\u7531\u5668\uff1a\u7f51\u7edc\u5c42\uff0c\u67e5\u770bIP\u5730\u5740\uff0c\u9009\u62e9\u7531\u54ea\u4e2a\u7f51\u5361\u5206\u53d1</li> </ul> </li> </ul>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u5404\u5c42\u6b21\u534f\u8bae\u6570\u636e\u5355\u5143","title":"\u5404\u5c42\u6b21\u534f\u8bae\u6570\u636e\u5355\u5143","text":"<ul> <li>\u5e94\u7528\u5c42\uff1a\u62a5\u6587(message)</li> <li>\u4f20\u8f93\u5c42\uff1a\u62a5\u6587\u6bb5(segment)</li> <li>\u7f51\u7edc\u5c42\uff1a\u5206\u7ec4(packet),\u65e0\u8fde\u63a5(datagram)</li> <li>\u6570\u636e\u94fe\u8def\u5c42\uff1a\u5e27(frame)</li> <li>\u7269\u7406\u5c42\uff1a\u6bd4\u7279(bit)</li> </ul>"},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#8-\u5386\u53f2","title":"8. \u5386\u53f2","text":""},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#9-\u5c0f\u7ed3","title":"9. \u5c0f\u7ed3","text":""},{"location":"computer_network/Lec1%20%E6%A6%82%E8%AE%BA/#\u9ad8\u5c42\u6b21","title":"\u9ad8\u5c42\u6b21","text":"<ul> <li>Internet</li> <li>\u4ec0\u4e48\u662f\u534f\u8bae</li> <li>\u7f51\u7edc\u8fb9\u7f18\uff0c\u6838\u5fc3\uff0c\u63a5\u5165\u7f51\u7edc<ul> <li>\u5206\u7ec4\u4ea4\u6362 VS \u7535\u8def\u4ea4\u6362</li> </ul> </li> <li>Internet/ISP \u7ed3\u6784</li> <li>\u6027\u80fd\uff1a\u4e22\u5931\uff0c\u5ef6\u65f6\uff0c\u541e\u5410\u91cf</li> <li>\u5c42\u6b21\u6a21\u578b\u548c\u670d\u52a1\u6a21\u578b</li> <li>\u5386\u53f2</li> </ul>"},{"location":"computer_network/Lec2%20%E5%BA%94%E7%94%A8%E5%B1%82/","title":"\u63d0\u7eb2","text":"<ol> <li>\u5e94\u7528\u5c42\u534f\u8bae\u539f\u7406</li> <li>web and HTTP</li> <li>FTP</li> <li>Email<ol> <li>SMTP</li> <li>POP3</li> <li>IMAP</li> </ol> </li> <li>DNS</li> <li>P2P</li> <li>CDN</li> <li>TCP\u5957\u63a5\u5b57(socket)\u7f16\u7a0b </li> <li>UDP\u5957\u63a5\u5b57\u7f16\u7a0b</li> </ol>"},{"location":"computer_network/Lec2%20%E5%BA%94%E7%94%A8%E5%B1%82/#1-\u5e94\u7528\u5c42\u534f\u8bae\u539f\u7406","title":"1. \u5e94\u7528\u5c42\u534f\u8bae\u539f\u7406","text":""},{"location":"computer_network/Lec2%20%E5%BA%94%E7%94%A8%E5%B1%82/#lec1-\u6982\u8bba\u7f51\u7edc\u8fb9\u7f18\u7f51\u7edc\u5e94\u7528\u7684\u4f53\u7cfb\u7ed3\u6784","title":"[[Lec1 \u6982\u8bba#\u7f51\u7edc\u8fb9\u7f18|\u7f51\u7edc\u5e94\u7528\u7684\u4f53\u7cfb\u7ed3\u6784]]","text":"<ul> <li>CS client/server<ul> <li>\u670d\u52a1\u5668\uff1a\u4e00\u76f4\u8fd0\u884c<ul> <li>\u56fa\u5b9a\u7684IP\u5730\u5740\u4ee5\u53ca\u7ea6\u5b9a\u597d\u7684\u7aef\u53e3\u53f7</li> <li>\u6269\u5c55\u6027(\u5dee)</li> </ul> </li> <li>\u5ba2\u6237\u7aef<ul> <li>\u4e3b\u52a8\u4e0e\u670d\u52a1\u5668\u901a\u4fe1</li> <li>\u52a8\u6001IP\u5730\u5740</li> </ul> </li> </ul> </li> <li>Peer to peer</li> <li>\u6df7\u5408\u6a21\u5f0f</li> </ul>"},{"location":"computer_network/Lec2%20%E5%BA%94%E7%94%A8%E5%B1%82/#\u8fdb\u7a0b\u901a\u4fe1","title":"\u8fdb\u7a0b\u901a\u4fe1","text":"<ul> <li>\u8fdb\u7a0b\uff1a\u5728\u4e3b\u673a\u4e0a\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f<ul> <li>\u5ba2\u6237\u7aef\u8fdb\u7a0b\uff1a\u53d1\u8d77\u901a\u4fe1\u7684\u8fdb\u7a0b</li> <li>\u670d\u52a1\u5668\u8fdb\u7a0b\uff1a\u7b49\u5f85\u8fde\u63a5\u7684\u8fdb\u7a0b</li> </ul> </li> <li>\u901a\u4fe1<ul> <li>\u540c\u4e00\u4e2a\u4e3b\u673a\u5185\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5b9a\u4e49</li> <li>\u4e0d\u540c\u4e3b\u673a\uff1a\u4ea4\u6362\u62a5\u6587</li> </ul> </li> <li>\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898<ul> <li>\u8fdb\u7a0b\u6807\u8bc6\u548c\u5bfb\u5740\u95ee\u9898</li> <li>\u4f20\u8f93\u5c42-\u5e94\u7528\u5c42\u63d0\u4f9b\u7684\u670d\u52a1\u662f\u4ec0\u4e48(SAP socket, API)</li> <li>\u5982\u4f55\u4f7f\u7528\u4f20\u8f93\u5c42\u63d0\u4f9b\u7684\u670d\u52a1\uff0c\u5b9e\u73b0\u5e94\u7528\u8fdb\u7a0b\u4e4b\u95f4\u7684\u62a5\u6587\u4ea4\u6362</li> </ul> </li> </ul>"},{"location":"computer_network/Lec2%20%E5%BA%94%E7%94%A8%E5%B1%82/#\u5bf9\u8fdb\u7a0b\u8fdb\u884c\u7f16\u5740","title":"\u5bf9\u8fdb\u7a0b\u8fdb\u884c\u7f16\u5740","text":"<ul> <li>\u8fdb\u7a0b\u5728\u53d1\u9001\u63a5\u53d7\u62a5\u6587\u7684\u65f6\u5019\u9700\u8981\u6709\u552f\u4e00\u6807\u8bc6<ul> <li>\u4e3b\u673a\uff1aIP</li> <li>\u91c7\u7528\u7684\u534f\u8bae</li> <li>\u7aef\u53e3\u53f7\uff1aport number</li> </ul> </li> <li>HTTP: TCP 80</li> <li>\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u7528IP+port\u8868\u793a\u7aef\u8282\u70b9</li> </ul>"},{"location":"computer_network/Lec2%20%E5%BA%94%E7%94%A8%E5%B1%82/#\u4f20\u8f93\u5c42\u63d0\u4f9b\u7684\u670d\u52a1","title":"\u4f20\u8f93\u5c42\u63d0\u4f9b\u7684\u670d\u52a1","text":""},{"location":"computer_network/Lec2%20%E5%BA%94%E7%94%A8%E5%B1%82/#\u9700\u8981\u7a7f\u8fc7\u5c42\u95f4\u7684\u4fe1\u606f","title":"\u9700\u8981\u7a7f\u8fc7\u5c42\u95f4\u7684\u4fe1\u606f","text":"<ul> <li>\u5fc5\u987b\u643a\u5e26\u7684\u4fe1\u606f<ul> <li>\u6570\u636e</li> <li>\u8c01\u4f20\u7684(IP + TCP(UDP)\u7aef\u53e3)</li> <li>\u4f20\u7ed9\u8c01\uff0c\u5bf9\u65b9\u7684(IP + TCP(UDP)\u7aef\u53e3)</li> </ul> </li> </ul>"},{"location":"computer_network/Lec2%20%E5%BA%94%E7%94%A8%E5%B1%82/#\u5c42\u95f4\u4fe1\u606f\u7684\u4ee3\u8868tcp","title":"\u5c42\u95f4\u4fe1\u606f\u7684\u4ee3\u8868(TCP)","text":"<ul> <li>API\u4f20\u8f93\u62a5\u6587\u5bb9\u6613\u51fa\u9519</li> <li>\u7528socket(\u4e00\u4e2a\u6574\u6570)\u6807\u8bc6\u901a\u4fe1\u7684\u53cc\u65b9\uff08\u7c7b\u6bd4os\u53e5\u67c4fd\uff09</li> <li>TCP socket: \u6e90IP(\u7ed9\u4e0b\u5c42IP\u534f\u8bae\u4f7f\u7528[[Lec1 \u6982\u8bba#\u6570\u636e\u5355\u5143|ICI + SDU = PDU]])\uff0c\u6e90\u7aef\u53e3\uff0c\u76ee\u6807IP\uff0c\u76ee\u6807\u7aef\u53e3</li> <li>\u672c\u5730\u7684\u6807\u8bc6\uff0c\u5176\u4ed6\u4e3b\u673a\u4e0d\u77e5\u9053</li> </ul>"},{"location":"computer_network/Lec2%20%E5%BA%94%E7%94%A8%E5%B1%82/#\u5c42\u95f4\u4fe1\u606f\u4ee3\u7801udp","title":"\u5c42\u95f4\u4fe1\u606f\u4ee3\u7801(UDP)","text":"<ul> <li>UDP\u4e24\u4e2a\u8fdb\u7a0b\u65e0\u9700\u5efa\u7acb\u8fde\u63a5</li> <li>UDP socket\uff1a \u672cIP\uff0c\u672c\u7aef\u53e3</li> <li>\u4f20\u8f93\u62a5\u6587\u65f6\u9700\u8981\u63d0\u4f9b\u5bf9\u65b9IP\uff0cport</li> </ul>"},{"location":"computer_network/Lec2%20%E5%BA%94%E7%94%A8%E5%B1%82/#tcp-\u4e0e-udp-socket\u95f4\u7684\u533a\u522b","title":"TCP \u4e0e UDP socket\u95f4\u7684\u533a\u522b","text":"<ul> <li>UDP socket \u53ea\u6709\u81ea\u5df1\u7684IP\u548csocket\uff0c\u76f8\u5f53\u4e8e\u552f\u4e00\u6807\u8bc6\u4e86\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u800cTCP socket \u76f8\u5f53\u4e8e\u5728\u8fdb\u7a0b\u57fa\u7840\u4e0a\u8868\u793a\u4e86\u4e00\u5bf9\u8fdb\u7a0b\uff0c\u5373\u4e00\u4e2a\u5173\u7cfb</li> <li>UDP \u5728\u8c03\u7528API\u65f6\u9700\u8981\u5411\u4e0b\u4f20\u9012\u76ee\u6807IP\u548c\u76ee\u6807\u7aef\u53e3\u53f7</li> </ul>"},{"location":"computer_network/Lec2%20%E5%BA%94%E7%94%A8%E5%B1%82/#\u5982\u4f55\u4f7f\u7528\u4f20\u8f93\u5c42\u7684\u670d\u52a1\u5b9e\u73b0\u5e94\u7528","title":"\u5982\u4f55\u4f7f\u7528\u4f20\u8f93\u5c42\u7684\u670d\u52a1\u5b9e\u73b0\u5e94\u7528","text":"<ul> <li>\u5b9a\u4e49\u5e94\u7528\u5c42\u534f\u8bae</li> <li>\u7f16\u5236\u7a0b\u5e8f</li> </ul>"},{"location":"computer_network/Lec2%20%E5%BA%94%E7%94%A8%E5%B1%82/#\u5e94\u7528\u5c42\u534f\u8bae","title":"\u5e94\u7528\u5c42\u534f\u8bae","text":""},{"location":"firstclass/firstclass/","title":"\u539f\u5b50\u7ed3\u6784","text":"<ul> <li>\u80fd\u5c42\u80fd\u7ea7(\u7535\u5b50\u7684\u6392\u5e03\u4f4d\u7f6e)</li> <li>\u57fa\u6001\u4e0e\u6fc0\u53d1\u6001\uff0c\u539f\u5b50\u5149\u8c31(\u7535\u5b50\u8dc3\u8fc1)</li> <li>\u6784\u9020\u539f\u7406\u4e0e\u7535\u5b50\u6392\u5e03\u5f0f(\u7535\u5b50\u7684\u80fd\u5c42\u80fd\u7ea7\u6392\u5e03\u987a\u5e8f)</li> <li>\u7535\u5b50\u4e91\u4e0e\u539f\u5b50\u8f68\u9053(\u5f15\u5165\u539f\u5b50\u8f68\u9053)</li> <li>\u6ce1\u5229\u539f\u7406\u3001\u6d2a\u7279\u89c4\u5219\u3001\u80fd\u91cf\u6700\u4f4e\u539f\u7406(\u7535\u5b50\u5728\u539f\u5b50\u8f68\u9053\u4e0a\u7684\u6392\u5e03\u89c4\u5219)</li> </ul>"},{"location":"firstclass/firstclass/#\u80fd\u5c42\u4e0e\u80fd\u7ea7","title":"\u80fd\u5c42\u4e0e\u80fd\u7ea7","text":"<ul> <li>\u80fd\u5c42\uff1aK, L, M, N, O, P, Q</li> <li>\u80fd\u7ea7\uff1as, p, d, f</li> </ul>"},{"location":"firstclass/firstclass/#\u57fa\u6001\u4e0e\u6fc0\u53d1\u6001\u539f\u5b50\u5149\u8c31","title":"\u57fa\u6001\u4e0e\u6fc0\u53d1\u6001\uff0c\u539f\u5b50\u5149\u8c31","text":"<ul> <li>\u5438\u6536\u80fd\u91cf\uff0c\u8fdb\u884c\u8dc3\u8fc1\u3002\u91ca\u653e\u80fd\u91cf\uff0c\u8fd4\u56de\u57fa\u6001\u3002</li> <li>\u539f\u5b50\u5149\u8c31\uff0c\u6bcf\u79cd\u539f\u5b50\u53ea\u80fd\u53d1\u51fa\u7279\u5b9a\u7684\u5149</li> <li>\u53d1\u5c04\u5149\u8c31\u548c\u5438\u6536\u5149\u8c31</li> </ul>"},{"location":"firstclass/firstclass/#\u6784\u9020\u539f\u7406\u4e0e\u7535\u5b50\u6392\u5e03\u5f0f","title":"\u6784\u9020\u539f\u7406\u4e0e\u7535\u5b50\u6392\u5e03\u5f0f","text":"<ul> <li>\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u7535\u5b50\u600e\u4e48\u586b\u5145\u7684\u89c4\u5f8b</li> </ul>"}]}